name: Continuous integration

on:
  push:
    branches:
      - master
      - '[0-9]+.[0-9]+-gdal[0-9]+.[0-9]+'
    tags:
      - '*'
  pull_request:

env:
  HAS_SECRETS: ${{ secrets.HAS_SECRETS }}
  DOCKER_BUILDKIT: '1'

jobs:
  main:
    name: Continuous integration
    runs-on: ubuntu-22.04
    timeout-minutes: 210
    if: "!startsWith(github.event.head_commit.message, '[skip ci] ')"

    steps:
      - run: df -h
      - name: Clean all docker images
        run: docker system prune --all --force
      - run: sudo rm -rf /usr/local/lib/android
      - run: df -h

      - uses: actions/checkout@v3

      - uses: camptocamp/initialise-gopass-summon-action@v2
        with:
          ci-gpg-private-key: ${{secrets.CI_GPG_PRIVATE_KEY}}
          github-gopass-ci-token: ${{secrets.GOPASS_CI_GITHUB_TOKEN}}
          patterns: docker
        if: env.HAS_SECRETS == 'HAS_SECRETS'

      - run: echo "${HOME}/.local/bin" >> ${GITHUB_PATH}
      - run: python3 -m pip install --user --requirement=ci/requirements.txt

      - name: Checks
        run: c2cciutils-checks

      - name: Cache
        uses: actions/cache@v3
        with:
          path: /tmp/docker/cache
          key: docker-cache-${{ github.base_ref }}-${{ github.head_ref }}-${{ github.run_id }}
          restore-keys: |
            docker-cache-${{ github.base_ref }}-${{ github.head_ref }}-
            docker-cache-${{ github.base_ref }}-
            docker-cache-master-
            docker-cache-
            docker-cache
        if: github.event_name == 'pull_request'
      - name: Cache
        uses: actions/cache@v3
        with:
          path: /tmp/docker/cache
          key: docker-cache-${{ github.ref_name }}-${{ github.ref_name }}-${{ github.run_id }}
          restore-keys: |
            docker-cache-${{ github.ref_name }}-${{ github.ref_name }}-
            docker-cache-${{ github.ref_name }}-
            docker-cache-master-
            docker-cache-
            docker-cache
        if: github.event_name == 'push'
      - name: Fill the cache
        run: |
          mkdir -p /tmp/docker/cache/.ccache
          mkdir cache
          cp -ar /tmp/docker/cache/.ccache cache
          touch cache/.ccache/a-file
          docker build --file=Dockerfile-fillcache .
          rm -rf cache

      - run: make build-server
      - run: make build-desktop
      - run: make build-cache

      - name: Extract cache
        run: |
          rm -rf /tmp/docker/cache/.ccache
          docker run --rm --detach --name=cache qgis-cache
          docker cp cache:/.ccache /tmp/docker/cache
          docker stop cache

      - run: make run
      - run: (cd acceptance_tests && c2cciutils-docker-logs)
        if: always()
      - run: make acceptance
      - run: (cd acceptance_tests && c2cciutils-docker-logs)
        if: always()

      - name: Publish
        run: c2cciutils-publish
        if: env.HAS_SECRETS == 'HAS_SECRETS'
      - run: git diff --exit-code --patch > /tmp/dpkg-versions.patch || true
        if: failure()
      - uses: actions/upload-artifact@v4
        with:
          name: Update dpkg versions list.patch
          path: /tmp/dpkg-versions.patch
          retention-days: 1
        if: failure()
